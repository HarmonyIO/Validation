<?php declare(strict_types=1);

namespace HarmonyIO\Validation\Enum\File\Image\Svg;

final class Attribute
{
    public const ACCENT_HEIGHT = 'accent-height';
    public const ACCUMULATE = 'accumulate';
    public const ADDITIVE = 'additive';
    public const ALIGNMENT_BASELINE = 'alignment-baseline';
    public const ALLOW_REORDER = 'allowReorder';
    public const ALPHABETIC = 'alphabetic';
    public const AMPLITUDE = 'amplitude';
    public const ARABIC_FORM = 'arabic-form';
    public const ASCENT = 'ascent';
    public const ATTRIBUTE_NAME = 'attributeName';
    public const ATTRIBUTE_TYPE = 'attributeType';
    public const AUTO_REVERSE = 'autoReverse';
    public const AZIMUTH = 'azimuth';
    public const BASE_FREQUENCY = 'baseFrequency';
    public const BASELINE_SHIFT = 'baseline-shift';
    public const BASE_PROFILE = 'baseProfile';
    public const BBOX = 'bbox';
    public const BEGIN = 'begin';
    public const BIAS = 'bias';
    public const BY = 'by';
    public const CALC_MODE = 'calcMode';
    public const CAP_HEIGHT = 'cap-height';
    // underscore suffix because class is a reserved word
    public const CLASS_ = 'class';
    public const CLIP = 'clip';
    public const CLIP_PATH_UNITS = 'clipPathUnits';
    public const CLIP_PATH = 'clip-path';
    public const CLIP_RULE = 'clip-rule';
    public const COLOR = 'color';
    public const COLOR_INTERPOLATION = 'color-interpolation';
    public const COLOR_INTERPOLATION_FILTERS = 'color-interpolation-filters';
    public const COLOR_PROFILE = 'color-profile';
    public const COLOR_RENDERING = 'color-rendering';
    public const CONTENT_SCRIPT_TYPE = 'contentScriptType';
    public const CONTENT_STYLE_TYPE = 'contentStyleType';
    public const CURSOR = 'cursor';
    public const CX = 'cx';
    public const CY = 'cy';
    public const D = 'd';
    public const DECELERATE = 'decelerate';
    public const DESCENT = 'descent';
    public const DIFFUSE_CONSTANT = 'diffuseConstant';
    public const DIRECTION = 'direction';
    public const DISPLAY = 'display';
    public const DIVISOR = 'divisor';
    public const DOMINANT_BASELINE = 'dominant-baseline';
    public const DUR = 'dur';
    public const DX = 'dx';
    public const DY = 'dy';
    public const EDGE_MODE = 'edgeMode';
    public const ELEVATION = 'elevation';
    public const ENABLE_BACKGROUND = 'enable-background';
    public const END = 'end';
    public const EXPONENT = 'exponent';
    public const EXTERNAL_RESOURCES_REQUIRED = 'externalResourcesRequired';
    public const FILL = 'fill';
    public const FILL_OPACITY = 'fill-opacity';
    public const FILL_RULE = 'fill-rule';
    public const FILTER = 'filter';
    public const FILTER_RES = 'filterRes';
    public const FILTER_UNITS = 'filterUnits';
    public const FLOOD_COLOR = 'flood-color';
    public const FLOOD_OPACITY = 'flood-opacity';
    public const FONT_FAMILY = 'font-family';
    public const FONT_SIZE = 'font-size';
    public const FONT_SIZE_ADJUST = 'font-size-adjust';
    public const FONT_STRETCH = 'font-stretch';
    public const FONT_STYLE = 'font-style';
    public const FONT_VARIANT = 'font-variant';
    public const FONT_WEIGHT = 'font-weight';
    public const FORMAT = 'format';
    public const FROM = 'from';
    public const FR = 'fr';
    public const FX = 'fx';
    public const FY = 'fy';
    public const G1 = 'g1';
    public const G2 = 'g2';
    public const GLYPH_NAME = 'glyph-name';
    public const GLYPH_ORIENTATION_HORIZONTAL = 'glyph-orientation-horizontal';
    public const GLYPH_ORIENTATION_VERTICAL = 'glyph-orientation-vertical';
    public const GLYPH_REF = 'glyphRef';
    public const GRADIENT_TRANSFORM = 'gradientTransform';
    public const GRADIENT_UNITS = 'gradientUnits';
    public const HANGING = 'hanging';
    public const HEIGHT = 'height';
    public const HREF = 'href';
    public const HREFLANG = 'hreflang';
    public const HORIZ_ADV_X = 'horiz-adv-x';
    public const HORIZ_ORIGIN_X = 'horiz-origin-x';
    public const ID = 'id';
    public const IDEOGRAPHIC = 'ideographic';
    public const IMAGE_RENDERING = 'image-rendering';
    public const IN = 'in';
    public const IN2 = 'in2';
    public const INTERCEPT = 'intercept';
    public const K = 'k';
    public const K1 = 'k1';
    public const K2 = 'k2';
    public const K3 = 'k3';
    public const K4 = 'k4';
    public const KERNEL_MATRIX = 'kernelMatrix';
    public const KERNEL_UNIT_LENGTH = 'kernelUnitLength';
    public const KERNING = 'kerning';
    public const KEY_POINTS = 'keyPoints';
    public const KEY_SPLINES = 'keySplines';
    public const KEY_TIMES = 'keyTimes';
    public const LANG = 'lang';
    public const LENGTH_ADJUST = 'lengthAdjust';
    public const LETTER_SPACING = 'letter-spacing';
    public const LIGHTING_COLOR = 'lighting-color';
    public const LIMITING_CODE_ANGLE = 'limitingConeAngle';
    public const LOCAL = 'local';
    public const MARKER_END = 'marker-end';
    public const MARKER_MID = 'marker-mid';
    public const MARKER_START = 'marker-start';
    public const MARKER_HEIGHT = 'markerHeight';
    public const MARKER_UNITS = 'markerUnits';
    public const MARKER_WIDTH = 'markerWidth';
    public const MASK = 'mask';
    public const MASK_CONTENT_UNITS = 'maskContentUnits';
    public const MASK_UNITS = 'maskUnits';
    public const MATHEMATICAL = 'mathematical';
    public const MAX = 'max';
    public const MEDIA = 'media';
    public const METHOD = 'method';
    public const MIN = 'min';
    public const MODE = 'mode';
    public const NAME = 'name';
    public const NUM_OCTAVES = 'numOctaves';
    public const OFFSET = 'offset';
    public const OPACITY = 'opacity';
    public const OPERATOR = 'operator';
    public const ORDER = 'order';
    public const ORIENT = 'orient';
    public const ORIENTATION = 'orientation';
    public const ORIGIN = 'origin';
    public const OVERFLOW = 'overflow';
    public const OVERLINE_POSITION = 'overline-position';
    public const OVERLINE_THICKNESS = 'overline-thickness';
    public const PANOSE_1 = 'panose-1';
    public const PAINT_ORDER = 'paint-order';
    public const PATH = 'path';
    public const PATH_LENGTH = 'pathLength';
    public const PATTERN_CONTENT_UNITS = 'patternContentUnits';
    public const PATTERN_TRANSFORM = 'patternTransform';
    public const PATTERN_UNITS = 'patternUnits';
    public const PING = 'ping';
    public const POINTER_EVENTS = 'pointer-events';
    public const POINTS = 'points';
    public const POINTS_AT_X = 'pointsAtX';
    public const POINTS_AT_Y = 'pointsAtY';
    public const POINTS_AT_Z = 'pointsAtZ';
    public const PRESERVE_ALPHA = 'preserveAlpha';
    public const PRESERVE_ASPECT_RATIO = 'preserveAspectRatio';
    public const PRIMITIVE_UNITS = 'primitiveUnits';
    public const R = 'r';
    public const RADIUS = 'radius';
    public const REFERRER_POLICY = 'referrerPolicy';
    public const REF_X = 'refX';
    public const REF_Y = 'refY';
    public const REL = 'rel';
    public const RENDERING_INTENT = 'rendering-intent';
    public const REPEAT_COUNT = 'repeatCount';
    public const REPEAT_DUR = 'repeatDur';
    public const REQUIRED_EXTENSIONS = 'requiredExtensions';
    public const REQUIRED_FEATURES = 'requiredFeatures';
    public const RESTART = 'restart';
    public const RESULT = 'result';
    public const ROTATE = 'rotate';
    public const RX = 'rx';
    public const RY = 'ry';
    public const SCALE = 'scale';
    public const SEED = 'seed';
    public const SHAPE_RENDERING = 'shape-rendering';
    public const SLOPE = 'slope';
    public const SPACING = 'spacing';
    public const SPECULAR_CONSTANT = 'specularConstant';
    public const SPECULAR_EXPONENT = 'specularExponent';
    public const SPEED = 'speed';
    public const SPREAD_METHOD = 'spreadMethod';
    public const START_OFFSET = 'startOffset';
    public const STD_DEVIATION = 'stdDeviation';
    public const STEMH = 'stemh';
    public const STEMV = 'stemv';
    public const STITCH_TILES = 'stitchTiles';
    public const STOP_COLOR = 'stop-color';
    public const STOP_OPACITY = 'stop-opacity';
    public const STRIKETHROUGH_POSITION = 'strikethrough-position';
    public const STRIKETHROUGH_THICKNESS = 'strikethrough-thickness';
    public const STRING = 'string';
    public const STROKE = 'stroke';
    public const STROKE_DASHARRAY = 'stroke-dasharray';
    public const STROKE_DASHOFFSET = 'stroke-dashoffset';
    public const STROKE_LINECAP = 'stroke-linecap';
    public const STROKE_LINEJOIN = 'stroke-linejoin';
    public const STROKE_MITERLIMIT = 'stroke-miterlimit';
    public const STROKE_OPACITY = 'stroke-opacity';
    public const STROKE_WIDTH = 'stroke-width';
    public const STYLE = 'style';
    public const SURFACE_SCALE = 'surfaceScale';
    public const SYSTEM_LANGUAGE = 'systemLanguage';
    public const TABINDEX = 'tabindex';
    public const TABLE_VALUES = 'tableValues';
    public const TARGET = 'target';
    public const TARGET_X = 'targetX';
    public const TARGET_Y = 'targetY';
    public const TEXT_ANCHOR = 'text-anchor';
    public const TEXT_DECORATION = 'text-decoration';
    public const TEXT_RENDERING = 'text-rendering';
    public const TEXT_LENGTH = 'textLength';
    public const TO = 'to';
    public const TRANSFORM = 'transform';
    public const TYPE = 'type';
    public const U1 = 'u1';
    public const U2 = 'u2';
    public const UNDERLINE_POSITION = 'underline-position';
    public const UNDERLINE_THICKNESS = 'underline-thickness';
    public const UNICODE = 'unicode';
    public const UNICODE_BIDI = 'unicode-bidi';
    public const UNICODE_RANGE = 'unicode-range';
    public const UNITS_PER_EM = 'units-per-em';
    public const V_ALPHABETIC = 'v-alphabetic';
    public const V_HANGING = 'v-hanging';
    public const V_IDEOGRAPHIC = 'v-ideographic';
    public const V_MATHEMATICAL = 'v-mathematical';
    public const VALUES = 'values';
    public const VECTOR_EFFECT = 'vector-effect';
    public const VERSION = 'version';
    public const VERT_ADV_Y = 'vert-adv-y';
    public const VERT_ORIGIN_X = 'vert-origin-x';
    public const VERT_ORIGIN_Y = 'vert-origin-y';
    public const VIEW_BOX = 'viewBox';
    public const VIEW_TARGET = 'viewTarget';
    public const VISIBILITY = 'visibility';
    public const WIDTH = 'width';
    public const WIDTHS = 'widths';
    public const WORD_SPACING = 'word-spacing';
    public const WRITING_MODE = 'writing-mode';
    public const X = 'x';
    public const X_HEIGHT = 'x-height';
    public const X1 = 'x1';
    public const X2 = 'x2';
    public const X_CHANNEL_SELECTOR = 'xChannelSelector';
    public const XLINK_ACTUATE = 'xlink:actuate';
    public const XLINK_ARCROLE = 'xlink:arcrole';
    public const XLINK_HREF = 'xlink:href';
    public const XLINK_ROLE = 'xlink:role';
    public const XLINK_SHOW = 'xlink:show';
    public const XLINK_TITLE = 'xlink:title';
    public const XLINK_TYPE = 'xlink:type';
    public const XML_BASE = 'xml:base';
    public const XML_LANG = 'xml:lang';
    public const XML_SPACE = 'xml:space';
    public const Y = 'y';
    public const Y1 = 'y1';
    public const Y2 = 'y2';
    public const Y_CHANNEL_SELECTOR = 'yChannelSelector';
    public const Z = 'z';
    public const ZOOM_AND_PAN = 'zoomAndPan';

    public function exists(string $value): bool
    {
        return in_array($value, (new \ReflectionClass(self::class))->getConstants(), true);
    }
}
